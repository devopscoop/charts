# Default values for generic-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Use more than 1 if this is prod.
replicaCount: 1

# Pod metadata
#metadata:
#  annotations:
#    iam.amazonaws.com/role: arn:aws:iam::999999999:role/example-role

# Pod labels
#labels:
#   redis-client: "true"

# If you use npm run start, you might want to change this to 3000.
containerPort: 80

image:
  repository: registry.gitlab.com/dedevsecops/example-api
  pullPolicy: IfNotPresent
  # Highly recommend that you use the exact git commit hash that build the container as the tag for all your images. Never use latest.
  tag: d34db33f

imagePullSecrets: []
# - name: example-docker-secret

# Environment variables
# NOTE: These have to be strings, even numbers, have to be strings! Helm is weird.
env:
  - name: EVANS_RULES
    value: "1"

# You shouldn't actually put secrets in the main values.yaml file. You should
# pull them all out and put them in a separate file like secrets.values.yaml
# and use sops to encrypt them.
#secrets:
#  ADMIN_TOKEN: kjhfkjgahsdug
#  PASSWORD: kfj09u039jh
#  AWS_ACCESS_SECRETS_AND_SUCH: asjkldnkasghd9

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
  hosts:
    - host: api.dedevsecops.com
      paths:
        - /
  tls:
    - secretName: api.dedevsecops.com
      hosts:
        - api.dedevsecops.com
        - www.api.dedevsecops.com


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
#  podAntiAffinity:
#    preferredDuringSchedulingIgnoredDuringExecution:
#    - podAffinityTerm:
#        labelSelector:
#          matchExpressions:
#          - key: app.kubernetes.io/instance
#            operator: In
#            values:
#            - api
#        topologyKey: failure-domain.beta.kubernetes.io/zone
#      weight: 100
